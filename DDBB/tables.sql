CREATE TABLE SKILLS_MATRIX.PRACTITIONERS
(
	PRACTITIONER_ID VARCHAR(10),
	PRACTITIONER VARCHAR(50),
	EMAIL VARCHAR(30),
	OFFERING_PORTFOLIO VARCHAR(40),
	COST_CENTER VARCHAR(30),
	PRACTITIONER_CATEGORY VARCHAR(40),
	CONSTRAINT PK_PRACTITIONERS PRIMARY KEY (PRACTITIONER_ID)
);

CREATE TABLE SKILLS_MATRIX.DPN_PICTURES
(
	PRACTITIONER_ID VARCHAR(10),
	PRACTITIONER VARCHAR(50),
	URL VARCHAR,
	CONSTRAINT PK_DPN_PICTURES PRIMARY KEY (PRACTITIONER_ID),
	CONSTRAINT FK_DPN_PICTURES_PRACTITIONERS FOREIGN KEY (PRACTITIONER_ID) REFERENCES SKILLS_MATRIX.PRACTITIONERS (PRACTITIONER_ID)
);

CREATE TABLE SKILLS_MATRIX.CERTIFICATIONS
(
	PRACTITIONER_ID VARCHAR(10),
	CERTIFICATION VARCHAR(30),
	PRACTITIONER VARCHAR(50),
	CERTIFICATION_LEVEL VARCHAR(10),
	CONSTRAINT PK_CERTIFICATIONS PRIMARY KEY (PRACTITIONER_ID, CERTIFICATION),
	CONSTRAINT FK_CERTIFICATIONS_PRACTITIONERS FOREIGN KEY (PRACTITIONER_ID) REFERENCES SKILLS_MATRIX.PRACTITIONERS (PRACTITIONER_ID)
);

CREATE TABLE SKILLS_MATRIX.PROJECTS
(
	PRACTITIONER_ID VARCHAR(10),
	PROJECT VARCHAR(40),
	PRACTITIONER VARCHAR(50),
	RESPONSIBLE VARCHAR(50),
	LIFETIME FLOAT,
	SKILL_1 VARCHAR(80),
	SKILL_2 VARCHAR(80),
	SKILL_3 VARCHAR(80),
	CONSTRAINT PK_PROJECTS PRIMARY KEY (PRACTITIONER_ID, PROJECT),
	CONSTRAINT FK_PROJECTS_PRACTITIONERS FOREIGN KEY (PRACTITIONER_ID) REFERENCES SKILLS_MATRIX.PRACTITIONERS (PRACTITIONER_ID)
);

CREATE TABLE SKILLS_MATRIX.SKILLS
(
	SKILL_ID INTEGER,
	SKILL VARCHAR(80),
	CONSTRAINT PK_SKILLS PRIMARY KEY (SKILL_ID)
);

CREATE TABLE SKILLS_MATRIX.CATEGORIES
(
	CATEGORY_ID INTEGER,
	CATEGORY VARCHAR(40),
	CONSTRAINT PK_CATEGORIES PRIMARY KEY (CATEGORY_ID)
);

CREATE TABLE SKILLS_MATRIX.SKILLS_CATEGORIES
(
	SKILL_ID INTEGER,
	SKILL VARCHAR(80),
	CATEGORY_ID INTEGER,
	CATEGORY VARCHAR(40),
	CONSTRAINT PK_SKILLS_CATEGORIES PRIMARY KEY (SKILL_ID),
	CONSTRAINT FK_SKILLS_CATEGORIES_SKILLS FOREIGN KEY (SKILL_ID) REFERENCES SKILLS_MATRIX.SKILLS (SKILL_ID),
	CONSTRAINT FK_SKILLS_CATEGORIES_CATEGORIES FOREIGN KEY (CATEGORY_ID) REFERENCES SKILLS_MATRIX.CATEGORIES (CATEGORY_ID)
);

CREATE TABLE SKILLS_MATRIX.SKILLS_CATEGORIES_GDN
(
	SKILL_ID INTEGER,
	GDN_CATEGORY_ID INTEGER,
	SKILL VARCHAR(80),
	GDN_CATEGORY VARCHAR(80),
	CATEGORY_ID INTEGER,
	CATEGORY VARCHAR(40),
	CONSTRAINT PK_SKILLS_CATEGORIES_GDN PRIMARY KEY (SKILL_ID, GDN_CATEGORY_ID),
	CONSTRAINT FK_SKILLS_CATEGORIES_GDN_SKILLS FOREIGN KEY (SKILL_ID) REFERENCES SKILLS_MATRIX.SKILLS (SKILL_ID),
	CONSTRAINT FK_SKILLS_CATEGORIES_GDN_CATEGORIES FOREIGN KEY (CATEGORY_ID) REFERENCES SKILLS_MATRIX.CATEGORIES (CATEGORY_ID)
);

CREATE TABLE SKILLS_MATRIX.ROLES
(
	ROL VARCHAR(35),
	CATEGORY_ID INTEGER,
	CATEGORY VARCHAR(40),
	CONSTRAINT PK_ROLES PRIMARY KEY (ROL, CATEGORY_ID),
	CONSTRAINT FK_ROLES_CATEGORIES FOREIGN KEY (CATEGORY_ID) REFERENCES SKILLS_MATRIX.CATEGORIES (CATEGORY_ID)
);

CREATE TABLE SKILLS_MATRIX.LEVELS
(
	LEVEL CHAR,
	DESCRIPTION VARCHAR(30),
	CONSTRAINT PK_LEVELS PRIMARY KEY (LEVEL)
);

CREATE TABLE SKILLS_MATRIX.SKILLS_MATRIX
(
	PRACTITIONER_ID VARCHAR(10),
	SKILL_ID INTEGER,
	PRACTITIONER VARCHAR(50),
	CATEGORY_ID INTEGER,
	CATEGORY VARCHAR(40),
	SKILL VARCHAR(80),
	LEVEL CHAR,
	CONSTRAINT PK_SKILLS_MATRIX PRIMARY KEY (PRACTITIONER_ID, SKILL_ID),
	CONSTRAINT FK_SKILLS_MATRIX_PRACTITIONERS FOREIGN KEY (PRACTITIONER_ID) REFERENCES SKILLS_MATRIX.PRACTITIONERS (PRACTITIONER_ID),
	CONSTRAINT FK_SKILLS_MATRIX_SKILLS FOREIGN KEY (SKILL_ID) REFERENCES SKILLS_MATRIX.SKILLS (SKILL_ID),
	CONSTRAINT FK_SKILLS_MATRIX_CATEGORIES FOREIGN KEY (CATEGORY_ID) REFERENCES SKILLS_MATRIX.CATEGORIES (CATEGORY_ID),
	CONSTRAINT FK_SKILLS_MATRIX_LEVELS FOREIGN KEY (LEVEL) REFERENCES SKILLS_MATRIX.LEVELS (LEVEL)
);